{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jinmin00\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\\\uCF54\\uB529 \\uACF5\\uBD80\\\\front-end\\\\react\\\\react-masterclass\\\\src\\\\routes\\\\Chart.tsx\",\n    _s = $RefreshSig$();\n\nimport ApexChart from \"react-apexcharts\";\nimport { useQuery } from \"react-query\";\nimport { useOutletContext } from \"react-router-dom\";\nimport { fetchCoinHistory } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chart() {\n  _s();\n\n  const {\n    coinId\n  } = useOutletContext();\n  const {\n    isLoading,\n    data\n  } = useQuery([\"ohlcv\", coinId], () => fetchCoinHistory(coinId));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? \"Loading chart...\" : /*#__PURE__*/_jsxDEV(ApexChart, {\n      type: \"line\",\n      series: [{\n        name: \"Price\",\n        data: data === null || data === void 0 ? void 0 : data.map(price => price.close)\n      }],\n      options: {\n        theme: {\n          mode: \"dark\"\n        },\n        chart: {\n          height: 300,\n          width: 500,\n          toolbar: {\n            show: false\n          },\n          background: \"transparent\"\n        },\n        stroke: {\n          curve: \"smooth\",\n          width: 4\n        },\n        grid: {\n          show: false\n        },\n        yaxis: {\n          show: false\n        },\n        xaxis: {\n          axisBorder: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          },\n          labels: {\n            show: false\n          }\n        },\n        fill: {\n          type: \"gradient\",\n          gradient: {\n            gradientToColors: [\"blue\"]\n          }\n        },\n        colors: [\"red\"]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chart, \"Lm5ICKsW3ANx6Rjj+I2L9QeN+6Y=\", false, function () {\n  return [useOutletContext, useQuery];\n});\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["ApexChart","useQuery","useOutletContext","fetchCoinHistory","Chart","coinId","isLoading","data","name","map","price","close","theme","mode","chart","height","width","toolbar","show","background","stroke","curve","grid","yaxis","xaxis","axisBorder","axisTicks","labels","fill","type","gradient","gradientToColors","colors"],"sources":["C:/Users/jinmin00/OneDrive/바탕 화면/코딩 공부/front-end/react/react-masterclass/src/routes/Chart.tsx"],"sourcesContent":["import ApexChart from \"react-apexcharts\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useOutletContext } from \"react-router-dom\";\r\nimport { fetchCoinHistory } from \"../api\";\r\n\r\ninterface ChartProps {\r\n  coinId: string;\r\n}\r\ninterface IHistorical {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\n\r\nfunction Chart() {\r\n  const { coinId } = useOutletContext<ChartProps>();\r\n  const { isLoading, data } = useQuery<IHistorical[]>([\"ohlcv\", coinId], () =>\r\n    fetchCoinHistory(coinId)\r\n  );\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"Loading chart...\"\r\n      ) : (\r\n        <ApexChart\r\n          type=\"line\"\r\n          series={[\r\n            {\r\n              name: \"Price\",\r\n              data: data?.map((price) => price.close) as number[],\r\n            },\r\n          ]}\r\n          options={{\r\n            theme: { mode: \"dark\" },\r\n            chart: {\r\n              height: 300,\r\n              width: 500,\r\n              toolbar: { show: false },\r\n              background: \"transparent\",\r\n            },\r\n            stroke: { curve: \"smooth\", width: 4 },\r\n            grid: {\r\n              show: false,\r\n            },\r\n            yaxis: {\r\n              show: false,\r\n            },\r\n            xaxis: {\r\n              axisBorder: { show: false },\r\n              axisTicks: { show: false },\r\n              labels: { show: false },\r\n            },\r\n            fill: {\r\n              type: \"gradient\",\r\n              gradient: { gradientToColors: [\"blue\"] },\r\n            },\r\n            colors: [\"red\"],\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default Chart;\r\n"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,kBAAtB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,SAASC,gBAAT,QAAiC,QAAjC;;;AAgBA,SAASC,KAAT,GAAiB;EAAA;;EACf,MAAM;IAAEC;EAAF,IAAaH,gBAAgB,EAAnC;EACA,MAAM;IAAEI,SAAF;IAAaC;EAAb,IAAsBN,QAAQ,CAAgB,CAAC,OAAD,EAAUI,MAAV,CAAhB,EAAmC,MACrEF,gBAAgB,CAACE,MAAD,CADkB,CAApC;EAGA,oBACE;IAAA,UACGC,SAAS,GACR,kBADQ,gBAGR,QAAC,SAAD;MACE,IAAI,EAAC,MADP;MAEE,MAAM,EAAE,CACN;QACEE,IAAI,EAAE,OADR;QAEED,IAAI,EAAEA,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEE,GAAN,CAAWC,KAAD,IAAWA,KAAK,CAACC,KAA3B;MAFR,CADM,CAFV;MAQE,OAAO,EAAE;QACPC,KAAK,EAAE;UAAEC,IAAI,EAAE;QAAR,CADA;QAEPC,KAAK,EAAE;UACLC,MAAM,EAAE,GADH;UAELC,KAAK,EAAE,GAFF;UAGLC,OAAO,EAAE;YAAEC,IAAI,EAAE;UAAR,CAHJ;UAILC,UAAU,EAAE;QAJP,CAFA;QAQPC,MAAM,EAAE;UAAEC,KAAK,EAAE,QAAT;UAAmBL,KAAK,EAAE;QAA1B,CARD;QASPM,IAAI,EAAE;UACJJ,IAAI,EAAE;QADF,CATC;QAYPK,KAAK,EAAE;UACLL,IAAI,EAAE;QADD,CAZA;QAePM,KAAK,EAAE;UACLC,UAAU,EAAE;YAAEP,IAAI,EAAE;UAAR,CADP;UAELQ,SAAS,EAAE;YAAER,IAAI,EAAE;UAAR,CAFN;UAGLS,MAAM,EAAE;YAAET,IAAI,EAAE;UAAR;QAHH,CAfA;QAoBPU,IAAI,EAAE;UACJC,IAAI,EAAE,UADF;UAEJC,QAAQ,EAAE;YAAEC,gBAAgB,EAAE,CAAC,MAAD;UAApB;QAFN,CApBC;QAwBPC,MAAM,EAAE,CAAC,KAAD;MAxBD;IARX;MAAA;MAAA;MAAA;IAAA;EAJJ;IAAA;IAAA;IAAA;EAAA,QADF;AA2CD;;GAhDQ5B,K;UACYF,gB,EACSD,Q;;;KAFrBG,K;AAiDT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}